{"ast":null,"code":"import _slicedToArray from \"/Users/ebensou/Cours/Projet 07.2020/Projet/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ebensou/Cours/Projet 07.2020/Projet/frontend/src/components/Register.tsx\";\nimport React, { useState } from \"react\";\nimport { Button, InputGroup } from \"@blueprintjs/core\";\nimport { Intent } from \"@blueprintjs/core/lib/esm/common/intent\";\nimport axios from \"axios\";\nimport { OurToaster } from \"./OurToaster\";\nexport const Register = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        mail = _useState6[0],\n        setMail = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mailConfirm = _useState8[0],\n        setMailConfirm = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        passwordConfirm = _useState12[0],\n        setPasswordConfirm = _useState12[1];\n\n  function registerSubmit(e) {\n    e.preventDefault();\n\n    if (formIsCorrect()) {\n      axios.post(`http://localhost:5000/users_pending`, {\n        id: null,\n        role: \"pending\",\n        password: password,\n        firstName: firstName,\n        lastName: lastName,\n        mail: mail,\n        birthDate: null,\n        phone: null,\n        address: null,\n        zipCode: null,\n        city: null,\n        country: null\n      }).then(() => {\n        OurToaster.show({\n          message: \"User successfully created ! You can now log in with your login and your password.\",\n          intent: Intent.SUCCESS,\n          timeout: 30000\n        });\n        setFirstName(\"\");\n        setLastName(\"\");\n        setMail(\"\");\n        setMailConfirm(\"\");\n        setPassword(\"\");\n        setPasswordConfirm(\"\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  function formIsCorrect() {\n    if (!mail.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)) {\n      OurToaster.show({\n        message: \"Mail address isn't valid.\",\n        intent: Intent.DANGER\n      });\n      return false;\n    }\n\n    if (mail !== mailConfirm) {\n      OurToaster.show({\n        message: \"Mail and mail confirm must be equals !\",\n        intent: Intent.DANGER\n      });\n      return false;\n    }\n\n    if (!password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)) {\n      OurToaster.show({\n        message: \"Password need more complexity ! It must be more than 8 characters, with one digit, one\" + \" upper case letter and one special symbol !\",\n        intent: Intent.DANGER,\n        timeout: 10000\n      });\n      return false;\n    }\n\n    if (password !== passwordConfirm) {\n      OurToaster.show({\n        message: \"Password and password confirm must be equals !\",\n        intent: Intent.DANGER\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  function validateForm() {\n    return mail.length > 0 && mailConfirm.length > 0 && password.length > 0 && passwordConfirm.length > 0 && firstName.length > 0 && lastName.length > 0;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: registerSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputgroup fx -c\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"fx -r\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    placeholder: \"First Name\",\n    required: true,\n    value: firstName,\n    onChange: ev => setFirstName(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(InputGroup, {\n    placeholder: \"Last Name\",\n    required: true,\n    value: lastName,\n    onChange: ev => setLastName(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    placeholder: \"Mail address\",\n    required: true,\n    value: mail,\n    onChange: ev => setMail(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(InputGroup, {\n    placeholder: \"Confirm mail address\",\n    required: true,\n    value: mailConfirm,\n    onChange: ev => setMailConfirm(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(InputGroup, {\n    placeholder: \"Password\",\n    type: \"password\",\n    required: true,\n    value: password,\n    onChange: ev => setPassword(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(InputGroup, {\n    placeholder: \"Confirm password\",\n    type: \"password\",\n    required: true,\n    value: passwordConfirm,\n    onChange: ev => setPasswordConfirm(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"outline-style-d\",\n    icon: \"tick-circle\",\n    type: \"submit\",\n    disabled: !validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Create an account\"))));\n};","map":{"version":3,"sources":["/Users/ebensou/Cours/Projet 07.2020/Projet/frontend/src/components/Register.tsx"],"names":["React","useState","Button","InputGroup","Intent","axios","OurToaster","Register","firstName","setFirstName","lastName","setLastName","mail","setMail","mailConfirm","setMailConfirm","password","setPassword","passwordConfirm","setPasswordConfirm","registerSubmit","e","preventDefault","formIsCorrect","post","id","role","birthDate","phone","address","zipCode","city","country","then","show","message","intent","SUCCESS","timeout","catch","error","console","log","match","DANGER","validateForm","length","ev","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\nimport { Button, InputGroup } from \"@blueprintjs/core\";\nimport { Intent } from \"@blueprintjs/core/lib/esm/common/intent\";\nimport axios from \"axios\";\nimport { OurToaster } from \"./OurToaster\";\n\nexport const Register: FunctionComponent = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [mailConfirm, setMailConfirm] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n\n  function registerSubmit(e: any): void {\n    e.preventDefault();\n    if (formIsCorrect()) {\n      axios\n        .post(`http://localhost:5000/users_pending`, {\n          id: null,\n          role: \"pending\",\n          password: password,\n          firstName: firstName,\n          lastName: lastName,\n          mail: mail,\n          birthDate: null,\n          phone: null,\n          address: null,\n          zipCode: null,\n          city: null,\n          country: null\n        })\n        .then(() => {\n          OurToaster.show({\n            message:\n              \"User successfully created ! You can now log in with your login and your password.\",\n            intent: Intent.SUCCESS,\n            timeout: 30000\n          });\n          setFirstName(\"\");\n          setLastName(\"\");\n          setMail(\"\");\n          setMailConfirm(\"\");\n          setPassword(\"\");\n          setPasswordConfirm(\"\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  function formIsCorrect(): boolean {\n    if (!mail.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)) {\n      OurToaster.show({\n        message: \"Mail address isn't valid.\",\n        intent: Intent.DANGER\n      });\n      return false;\n    }\n    if (mail !== mailConfirm) {\n      OurToaster.show({\n        message: \"Mail and mail confirm must be equals !\",\n        intent: Intent.DANGER\n      });\n      return false;\n    }\n    if (!password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)) {\n      OurToaster.show({\n        message:\n          \"Password need more complexity ! It must be more than 8 characters, with one digit, one\" +\n          \" upper case letter and one special symbol !\",\n        intent: Intent.DANGER,\n        timeout: 10000\n      });\n      return false;\n    }\n    if (password !== passwordConfirm) {\n      OurToaster.show({\n        message: \"Password and password confirm must be equals !\",\n        intent: Intent.DANGER\n      });\n      return false;\n    }\n    return true;\n  }\n\n  function validateForm(): boolean {\n    return (\n      mail.length > 0 &&\n      mailConfirm.length > 0 &&\n      password.length > 0 &&\n      passwordConfirm.length > 0 &&\n      firstName.length > 0 &&\n      lastName.length > 0\n    );\n  }\n\n  return (\n    <div>\n      <form onSubmit={registerSubmit}>\n        <div className=\"inputgroup fx -c\">\n          <div className=\"fx -r\">\n            <InputGroup\n              placeholder=\"First Name\"\n              required={true}\n              value={firstName}\n              onChange={(ev: any) => setFirstName(ev.currentTarget.value)}\n            />\n            <InputGroup\n              placeholder=\"Last Name\"\n              required={true}\n              value={lastName}\n              onChange={(ev: any) => setLastName(ev.currentTarget.value)}\n            />\n          </div>\n\n          <InputGroup\n            placeholder=\"Mail address\"\n            required={true}\n            value={mail}\n            onChange={(ev: any) => setMail(ev.currentTarget.value)}\n          />\n          <InputGroup\n            placeholder=\"Confirm mail address\"\n            required={true}\n            value={mailConfirm}\n            onChange={(ev: any) => setMailConfirm(ev.currentTarget.value)}\n          />\n          <InputGroup\n            placeholder=\"Password\"\n            type=\"password\"\n            required={true}\n            value={password}\n            onChange={(ev: any) => setPassword(ev.currentTarget.value)}\n          />\n          <InputGroup\n            placeholder=\"Confirm password\"\n            type=\"password\"\n            required={true}\n            value={passwordConfirm}\n            onChange={(ev: any) => setPasswordConfirm(ev.currentTarget.value)}\n          />\n          <Button\n            className=\"outline-style-d\"\n            icon=\"tick-circle\"\n            type=\"submit\"\n            disabled={!validateForm()}\n          >\n            Create an account\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}