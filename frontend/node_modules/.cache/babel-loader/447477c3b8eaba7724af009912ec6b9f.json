{"ast":null,"code":"import _slicedToArray from \"/Users/ebensou/Cours/Projet 07.2020/Projet/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ebensou/Cours/Projet 07.2020/Projet/frontend/src/components/Pending.tsx\";\nimport React, { useState } from \"react\";\nimport { Button, FileInput, H1, H6, InputGroup } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport axios from \"axios\";\nimport { OurToaster } from \"./OurToaster\";\nimport { Intent } from \"@blueprintjs/core/lib/esm/common/intent\";\nimport { ctx } from \"../services/Context\";\nexport const Pending = observer(() => {\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        date = _useState2[0],\n        setDate = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        file = _useState4[0],\n        setFile = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        phone = _useState6[0],\n        setPhone = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        address = _useState8[0],\n        setAddress = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        zipCode = _useState10[0],\n        setZipCode = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        city = _useState12[0],\n        setCity = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        country = _useState14[0],\n        setCountry = _useState14[1];\n\n  const dateString = date.toString();\n\n  function registerSubmit(e) {\n    e.preventDefault();\n\n    if (formIsCorrect()) {\n      axios.put(`http://localhost:5000/users_pending/${ctx.store.getId()}`, {\n        id: ctx.store.getId(),\n        role: \"pending-awaiting\",\n        password: null,\n        firstName: null,\n        lastName: null,\n        mail: null,\n        birthDate: dateString,\n        phone: phone.toString(),\n        address: address,\n        zipCode: zipCode.toString(),\n        city: city,\n        country: country\n      }).then(() => {\n        OurToaster.show({\n          message: \"Request sent !\",\n          intent: Intent.SUCCESS,\n          timeout: 8000\n        });\n        ctx.store.setRole(\"pending-awaiting\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  function formIsCorrect() {\n    return true;\n  }\n\n  function validateForm() {\n    return address.length > 0 && zipCode.length > 0 && city.length > 0 && country.length > 0;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"connected-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"curve-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"fx -c center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(H1, {\n    className: \"title-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Welcome to Heabank !\"), React.createElement(H6, {\n    className: \"title-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Hello dear customer, to finalize your registration, please fill in the various fields below. A banker will then be in charge of your file in order to process your registration request. You will be able to reconnect whenever you want to follow the status of your application.\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: registerSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login-inputgroup fx -c\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    type: \"date\",\n    placeholder: \"Date\",\n    required: true,\n    value: dateString,\n    onChange: ev => setDate(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(FileInput, {\n    text: \"ID...\",\n    onInputChange: e => setFile(e.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(InputGroup, {\n    type: \"number\",\n    size: 10,\n    placeholder: \"Phone\",\n    required: true,\n    value: phone,\n    onChange: ev => setPhone(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"inputgroup fx -c\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    placeholder: \"Address\",\n    required: true,\n    value: address,\n    onChange: ev => setAddress(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"fx -r\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    type: \"number\",\n    placeholder: \"ZipCode\",\n    required: true,\n    value: zipCode,\n    onChange: ev => setZipCode(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(InputGroup, {\n    placeholder: \"Country\",\n    required: true,\n    value: country,\n    onChange: ev => setCountry(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    placeholder: \"City\",\n    required: true,\n    value: city,\n    onChange: ev => setCity(ev.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(Button, {\n    className: \"outline-style-d\",\n    icon: \"tick-circle\",\n    type: \"submit\",\n    disabled: !validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Confirm my subscription\")))))));\n});","map":{"version":3,"sources":["/Users/ebensou/Cours/Projet 07.2020/Projet/frontend/src/components/Pending.tsx"],"names":["React","useState","Button","FileInput","H1","H6","InputGroup","observer","axios","OurToaster","Intent","ctx","Pending","Date","date","setDate","file","setFile","phone","setPhone","address","setAddress","zipCode","setZipCode","city","setCity","country","setCountry","dateString","toString","registerSubmit","e","preventDefault","formIsCorrect","put","store","getId","id","role","password","firstName","lastName","mail","birthDate","then","show","message","intent","SUCCESS","timeout","setRole","catch","error","console","log","validateForm","length","ev","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\nimport { Button, FileInput, H1, H6, InputGroup } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport axios from \"axios\";\nimport { OurToaster } from \"./OurToaster\";\nimport { Intent } from \"@blueprintjs/core/lib/esm/common/intent\";\nimport { ctx } from \"../services/Context\";\n\nexport const Pending: FunctionComponent = observer(() => {\n  const [date, setDate] = useState(new Date());\n  const [file, setFile] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  const dateString = date.toString();\n\n  function registerSubmit(e: any): void {\n    e.preventDefault();\n    if (formIsCorrect()) {\n      axios\n        .put(`http://localhost:5000/users_pending/${ctx.store.getId()}`, {\n          id: ctx.store.getId(),\n          role: \"pending-awaiting\",\n          password: null,\n          firstName: null,\n          lastName: null,\n          mail: null,\n          birthDate: dateString,\n          phone: phone.toString(),\n          address: address,\n          zipCode: zipCode.toString(),\n          city: city,\n          country: country\n        })\n        .then(() => {\n          OurToaster.show({\n            message:\n              \"Request sent !\",\n            intent: Intent.SUCCESS,\n            timeout: 8000\n          });\n          ctx.store.setRole(\"pending-awaiting\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  function formIsCorrect(): boolean {\n    return true;\n  }\n\n  function validateForm(): boolean {\n    return (\n      address.length > 0 &&\n      zipCode.length > 0 &&\n      city.length > 0 &&\n      country.length > 0\n    );\n  }\n\n  return (\n    <div className=\"body\">\n      <div className=\"connected-body\">\n        <div className=\"curve-border\">\n          <div className=\"fx -c center\">\n            <div>\n              <H1 className=\"title-primary\">Welcome to Heabank !</H1>\n              <H6 className=\"title-primary\">\n                Hello dear customer, to finalize your registration, please fill\n                in the various fields below. A banker will then be in charge of\n                your file in order to process your registration request. You\n                will be able to reconnect whenever you want to follow the status\n                of your application.\n              </H6>\n            </div>\n            <div>\n              <form onSubmit={registerSubmit}>\n                <div className=\"login-inputgroup fx -c\">\n                  <InputGroup\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    required={true}\n                    value={dateString}\n                    onChange={(ev: any) => setDate(ev.currentTarget.value)}\n                  />\n                  <FileInput\n                    text=\"ID...\"\n                    onInputChange={(e: any) => setFile(e.currentTarget.value)}\n                  />\n                  <InputGroup\n                    type=\"number\"\n                    size={10}\n                    placeholder=\"Phone\"\n                    required={true}\n                    value={phone}\n                    onChange={(ev: any) => setPhone(ev.currentTarget.value)}\n                  />\n                </div>\n                <div className=\"inputgroup fx -c\">\n                  <InputGroup\n                    placeholder=\"Address\"\n                    required={true}\n                    value={address}\n                    onChange={(ev: any) => setAddress(ev.currentTarget.value)}\n                  />\n                  <div className=\"fx -r\">\n                    <InputGroup\n                      type=\"number\"\n                      placeholder=\"ZipCode\"\n                      required={true}\n                      value={zipCode}\n                      onChange={(ev: any) => setZipCode(ev.currentTarget.value)}\n                    />\n                    <InputGroup\n                      placeholder=\"Country\"\n                      required={true}\n                      value={country}\n                      onChange={(ev: any) => setCountry(ev.currentTarget.value)}\n                    />\n                  </div>\n                  <InputGroup\n                    placeholder=\"City\"\n                    required={true}\n                    value={city}\n                    onChange={(ev: any) => setCity(ev.currentTarget.value)}\n                  />\n                </div>\n                <Button\n                  className=\"outline-style-d\"\n                  icon=\"tick-circle\"\n                  type=\"submit\"\n                  disabled={!validateForm()}\n                >\n                  Confirm my subscription\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}