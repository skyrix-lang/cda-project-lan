{"version":3,"sources":["serviceWorker.ts","services/Store.ts","services/Context.ts","components/OurToaster.tsx","components/Pending.tsx","components/Client.tsx","components/Banker.tsx","components/PendingAwaiting.tsx","components/Connected.tsx","components/Register.tsx","components/Login.tsx","components/Welcome.tsx","components/Home.tsx","index.tsx","images/Forbes_logo.svg"],"names":["Boolean","window","location","hostname","match","Store","name","this","session","role","id","observable","ctx","store","OurToaster","Toaster","create","className","position","Position","TOP","Pending","observer","useState","Date","date","setDate","setFile","phone","setPhone","address","setAddress","zipCode","setZipCode","city","setCity","country","setCountry","dateString","toString","onSubmit","e","preventDefault","axios","put","getId","password","firstName","lastName","mail","birthDate","then","show","message","intent","Intent","SUCCESS","timeout","setRole","catch","error","console","log","type","placeholder","required","value","onChange","ev","currentTarget","text","onInputChange","size","icon","disabled","length","Client","getName","Banker","PendingAwaiting","Connected","menu","getRole","align","Alignment","LEFT","Classes","MINIMAL","onClick","home","RIGHT","setName","Register","setFirstName","setLastName","setMail","mailConfirm","setMailConfirm","setPassword","passwordConfirm","setPasswordConfirm","DANGER","formIsCorrect","post","Login","showPassword","setShowPassword","lockButton","content","WARNING","minimal","get","response","data","setId","err","leftIcon","rightElement","Welcome","props","default_tab","tab","setTab","selectedTabId","title","onClickCapture","panel","panelClassName","Expander","alt","src","forbesLogo","Home","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.cfafbef4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable } from \"mobx\";\n\nexport class Store {\n  @observable session: any = {name:\"\", role:\"\", id:-1};\n\n  setName(name: string): boolean {\n    this.session.name = name;\n    return this.session.name === name;\n  }\n\n  getName(): string {\n    return this.session.name;\n  }\n\n  setRole(role: string): boolean {\n    this.session.role = role;\n    return this.session.role === role;\n  }\n\n  getRole(): string {\n    return this.session.role;\n  }\n\n  setId(id: number) {\n    this.session.id = id;\n    return this.session.id === id;\n  }\n\n  getId(): string {\n    return this.session.id;\n  }\n}\n","import { Store } from \"./Store\";\n\nexport class Context {\n  store = new Store();\n}\n\nexport const ctx = new Context();\n","import { Position, Toaster } from \"@blueprintjs/core\";\n\nexport const OurToaster = Toaster.create({\n    className: \"my-toaster\",\n    position: Position.TOP,\n});","import React, { FunctionComponent, useState } from \"react\";\nimport { Button, FileInput, H1, H6, InputGroup } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport axios from \"axios\";\nimport { OurToaster } from \"./OurToaster\";\nimport { Intent } from \"@blueprintjs/core/lib/esm/common/intent\";\nimport { ctx } from \"../services/Context\";\n\nexport const Pending: FunctionComponent = observer(() => {\n  const [date, setDate] = useState(new Date());\n  const [file, setFile] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  const dateString = date.toString();\n\n  function registerSubmit(e: any): void {\n    e.preventDefault();\n    if (formIsCorrect()) {\n      axios\n        .put(`http://localhost:5000/users_pending/${ctx.store.getId()}`, {\n          id: ctx.store.getId(),\n          role: \"pending-awaiting\",\n          password: null,\n          firstName: null,\n          lastName: null,\n          mail: null,\n          birthDate: dateString,\n          phone: phone.toString(),\n          address: address,\n          zipCode: zipCode.toString(),\n          city: city,\n          country: country\n        })\n        .then(() => {\n          OurToaster.show({\n            message:\n              \"Request sent !\",\n            intent: Intent.SUCCESS,\n            timeout: 8000\n          });\n          ctx.store.setRole(\"pending-awaiting\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  function formIsCorrect(): boolean {\n    return true;\n  }\n\n  function validateForm(): boolean {\n    return (\n      address.length > 0 &&\n      zipCode.length > 0 &&\n      city.length > 0 &&\n      country.length > 0\n    );\n  }\n\n  return (\n    <div className=\"body\">\n      <div className=\"connected-body\">\n        <div className=\"curve-border\">\n          <div className=\"fx -c center\">\n            <div>\n              <H1 className=\"title-primary\">Welcome to Heabank !</H1>\n              <H6 className=\"title-primary\">\n                Hello dear customer, to finalize your registration, please fill\n                in the various fields below. A banker will then be in charge of\n                your file in order to process your registration request. You\n                will be able to reconnect whenever you want to follow the status\n                of your application.\n              </H6>\n            </div>\n            <div>\n              <form onSubmit={registerSubmit}>\n                <div className=\"login-inputgroup fx -c\">\n                  <InputGroup\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    required={true}\n                    value={dateString}\n                    onChange={(ev: any) => setDate(ev.currentTarget.value)}\n                  />\n                  <FileInput\n                    text=\"ID...\"\n                    onInputChange={(e: any) => setFile(e.currentTarget.value)}\n                  />\n                  <InputGroup\n                    type=\"number\"\n                    size={10}\n                    placeholder=\"Phone\"\n                    required={true}\n                    value={phone}\n                    onChange={(ev: any) => setPhone(ev.currentTarget.value)}\n                  />\n                </div>\n                <div className=\"inputgroup fx -c\">\n                  <InputGroup\n                    placeholder=\"Address\"\n                    required={true}\n                    value={address}\n                    onChange={(ev: any) => setAddress(ev.currentTarget.value)}\n                  />\n                  <div className=\"fx -r\">\n                    <InputGroup\n                      type=\"number\"\n                      placeholder=\"ZipCode\"\n                      required={true}\n                      value={zipCode}\n                      onChange={(ev: any) => setZipCode(ev.currentTarget.value)}\n                    />\n                    <InputGroup\n                      placeholder=\"Country\"\n                      required={true}\n                      value={country}\n                      onChange={(ev: any) => setCountry(ev.currentTarget.value)}\n                    />\n                  </div>\n                  <InputGroup\n                    placeholder=\"City\"\n                    required={true}\n                    value={city}\n                    onChange={(ev: any) => setCity(ev.currentTarget.value)}\n                  />\n                </div>\n                <Button\n                  className=\"outline-style-d\"\n                  icon=\"tick-circle\"\n                  type=\"submit\"\n                  disabled={!validateForm()}\n                >\n                  Confirm my subscription\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { FunctionComponent, useState } from \"react\";\nimport { ctx } from \"../services/Context\";\nimport { H2, H4 } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\n\nexport const Client: FunctionComponent = observer(() => {\n  return (\n    <div>\n      <H2>Bienvenue {ctx.store.getName()}, vous êtes client chez Heabank !</H2>\n      <H4>PANEL :</H4>\n    </div>\n  );\n});\n","import React, { FunctionComponent, useState } from \"react\";\nimport { ctx } from \"../services/Context\";\nimport { H2, H4 } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\n\nexport const Banker: FunctionComponent = observer(() => {\n  return (\n    <div>\n      <H2>\n        Bienvenue {ctx.store.getName()}, vous êtes banquier chez Heabank !\n      </H2>\n      <H4>Voici les différents clients en attente :</H4>\n    </div>\n  );\n});\n","import React, { FunctionComponent, useState } from \"react\";\nimport { H1, H6 } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\n\nexport const PendingAwaiting: FunctionComponent = observer(() => {\n  return (\n    <div className=\"body\">\n      <div className=\"connected-body\">\n        <div className=\"fx -c center\">\n          <div className=\"curve-border\">\n            <H1 className=\"title-primary\">Awaiting validation !</H1>\n            <H6 className=\"title-primary\">\n              Hello dear customer, your request is currently being processed by\n              one of our bankers. Please be patient, you will soon be with us.\n            </H6>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { FunctionComponent } from \"react\";\nimport { ctx } from \"../services/Context\";\nimport { observer } from \"mobx-react\";\nimport { OurToaster } from \"./OurToaster\";\nimport { Intent } from \"@blueprintjs/core/lib/esm/common/intent\";\nimport { Pending } from \"./Pending\";\nimport { Client } from \"./Client\";\nimport { Banker } from \"./Banker\";\nimport {PendingAwaiting} from \"./PendingAwaiting\";\nimport {\n  Alignment,\n  Button,\n  Classes,\n  Icon,\n  Navbar,\n  NavbarDivider,\n  NavbarGroup,\n  NavbarHeading\n} from \"@blueprintjs/core\";\n\nexport const Connected: FunctionComponent = observer(() => {\n  const menu: any =\n    ctx.store.getRole() === \"client\" ? (\n      <Client />\n    ) : ctx.store.getRole() === \"banker\" ? (\n      <Banker />\n    ) : ctx.store.getRole() === \"pending\" ? (\n      <Pending />\n    ) : (\n      <PendingAwaiting />\n    );\n\n  function username(): string {\n    return `Signed in as ${ctx.store.getName()}`;\n  }\n\n  function home(): any {\n    if (ctx.store.getRole() !== \"pending\" && ctx.store.getRole() !== \"pending-awaiting\")\n      return (\n        <Button\n          className={\"outline-style-d \" + Classes.MINIMAL}\n          onClick={() => true}\n          icon=\"home\"\n          text=\"Home\"\n        />\n      );\n  }\n\n  function logout(): void {\n    ctx.store.setName(\"\");\n    ctx.store.setRole(\"\");\n    OurToaster.show({\n      message: \"Successfully disconnected.\",\n      intent: Intent.SUCCESS,\n      timeout: 8000\n    });\n  }\n  return (\n    <div>\n      <Navbar className=\"nav-bar\">\n        <NavbarGroup align={Alignment.LEFT}>\n          <NavbarHeading className=\"title-primary\">Heabank</NavbarHeading>\n          <NavbarDivider />\n          <NavbarHeading className=\"title-primary\">{username()}</NavbarHeading>\n          <NavbarDivider />\n          {home()}\n        </NavbarGroup>\n        <NavbarGroup align={Alignment.RIGHT}>\n          <NavbarDivider />\n          <Button\n            className={\"outline-style-d \" + Classes.MINIMAL}\n            onClick={() => logout()}\n            icon=\"log-out\"\n            text=\"Log-out\"\n          />\n        </NavbarGroup>\n      </Navbar>\n      {menu}\n      <div className=\"fx -r center footer-welcome\">\n        <Icon icon=\"error\" />\n        <p>Heabank property, all rights reserved.</p>\n      </div>\n    </div>\n  );\n});\n\n/*return (\n    <div>\n        <nav className=\"bp3-navbar .modifier\">\n            <div className=\"bp3-navbar-group bp3-align-left\">\n                <div className=\"bp3-navbar-heading\">Heabank</div>\n                <button className=\"bp3-button bp3-minimal bp3-icon-home\">Home</button>\n            </div>\n            <div className=\"bp3-navbar-group bp3-align-right\">\n                <span className=\"bp3-navbar-divider\"></span>\n                <button onClick={() => logout()} className=\"bp3-button bp3-minimal bp3-icon-log-out\">Log-out</button>\n            </div>\n        </nav>\n      {ctx.store.getRole() === \"client\" ? (\n        \"client\"\n      ) : ctx.store.getRole() === \"banker\" ? (\n        \"banquier\"\n      ) : (\n        <Pending />\n      )}\n    </div>\n  );\n});*/\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Button, InputGroup } from \"@blueprintjs/core\";\nimport { Intent } from \"@blueprintjs/core/lib/esm/common/intent\";\nimport axios from \"axios\";\nimport { OurToaster } from \"./OurToaster\";\n\nexport const Register: FunctionComponent = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [mailConfirm, setMailConfirm] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n\n  function registerSubmit(e: any): void {\n    e.preventDefault();\n    if (formIsCorrect()) {\n      axios\n        .post(`http://localhost:5000/users_pending`, {\n          id: null,\n          role: \"pending\",\n          password: password,\n          firstName: firstName,\n          lastName: lastName,\n          mail: mail,\n          birthDate: null,\n          phone: null,\n          address: null,\n          zipCode: null,\n          city: null,\n          country: null\n        })\n        .then(() => {\n          OurToaster.show({\n            message:\n              \"User successfully created ! You can now log in with your login and your password.\",\n            intent: Intent.SUCCESS,\n            timeout: 30000\n          });\n          setFirstName(\"\");\n          setLastName(\"\");\n          setMail(\"\");\n          setMailConfirm(\"\");\n          setPassword(\"\");\n          setPasswordConfirm(\"\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  function formIsCorrect(): boolean {\n    if (!mail.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)) {\n      OurToaster.show({\n        message: \"Mail address isn't valid.\",\n        intent: Intent.DANGER\n      });\n      return false;\n    }\n    if (mail !== mailConfirm) {\n      OurToaster.show({\n        message: \"Mail and mail confirm must be equals !\",\n        intent: Intent.DANGER\n      });\n      return false;\n    }\n    if (!password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)) {\n      OurToaster.show({\n        message:\n          \"Password need more complexity ! It must be more than 8 characters, with one digit, one\" +\n          \" upper case letter and one special symbol !\",\n        intent: Intent.DANGER,\n        timeout: 10000\n      });\n      return false;\n    }\n    if (password !== passwordConfirm) {\n      OurToaster.show({\n        message: \"Password and password confirm must be equals !\",\n        intent: Intent.DANGER\n      });\n      return false;\n    }\n    return true;\n  }\n\n  function validateForm(): boolean {\n    return (\n      mail.length > 0 &&\n      mailConfirm.length > 0 &&\n      password.length > 0 &&\n      passwordConfirm.length > 0 &&\n      firstName.length > 0 &&\n      lastName.length > 0\n    );\n  }\n\n  return (\n    <div>\n      <form onSubmit={registerSubmit}>\n        <div className=\"inputgroup fx -c\">\n          <div className=\"fx -r\">\n            <InputGroup\n              placeholder=\"First Name\"\n              required={true}\n              value={firstName}\n              onChange={(ev: any) => setFirstName(ev.currentTarget.value)}\n            />\n            <InputGroup\n              placeholder=\"Last Name\"\n              required={true}\n              value={lastName}\n              onChange={(ev: any) => setLastName(ev.currentTarget.value)}\n            />\n          </div>\n\n          <InputGroup\n            placeholder=\"Mail address\"\n            required={true}\n            value={mail}\n            onChange={(ev: any) => setMail(ev.currentTarget.value)}\n          />\n          <InputGroup\n            placeholder=\"Confirm mail address\"\n            required={true}\n            value={mailConfirm}\n            onChange={(ev: any) => setMailConfirm(ev.currentTarget.value)}\n          />\n          <InputGroup\n            placeholder=\"Password\"\n            type=\"password\"\n            required={true}\n            value={password}\n            onChange={(ev: any) => setPassword(ev.currentTarget.value)}\n          />\n          <InputGroup\n            placeholder=\"Confirm password\"\n            type=\"password\"\n            required={true}\n            value={passwordConfirm}\n            onChange={(ev: any) => setPasswordConfirm(ev.currentTarget.value)}\n          />\n          <Button\n            className=\"outline-style-d\"\n            icon=\"tick-circle\"\n            type=\"submit\"\n            disabled={!validateForm()}\n          >\n            Create an account\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, { FunctionComponent, useState } from \"react\";\nimport { ctx } from \"../services/Context\";\nimport { Button, InputGroup, Tooltip } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport { Intent } from \"@blueprintjs/core/lib/esm/common/intent\";\nimport axios from \"axios\";\nimport { OurToaster } from \"./OurToaster\";\n\nexport const Login: FunctionComponent = observer(() => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [mail, setMail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const lockButton = (\n    <Tooltip content={`${showPassword ? \"Hide\" : \"Show\"} Password`}>\n      <Button\n        className=\"outline-style-d\"\n        icon={showPassword ? \"unlock\" : \"lock\"}\n        intent={Intent.WARNING}\n        minimal={true}\n        onClick={() => setShowPassword(!showPassword)}\n      />\n    </Tooltip>\n  );\n\n  function loginSubmit(e: any) {\n    e.preventDefault();\n    if (formIsCorrect()) {\n      axios\n        .get(`http://localhost:5000/users/${mail}/${password}`)\n        .then(response => {\n          ctx.store.setName(\n            response.data.firstName + \" \" + response.data.lastName\n          );\n          ctx.store.setRole(response.data.role);\n          ctx.store.setId(response.data.id);\n\n          OurToaster.show({\n            message: \"Successfully connected !\",\n            intent: Intent.SUCCESS,\n            timeout: 8000\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n      axios\n        .get(`http://localhost:5000/users_pending/${mail}/${password}`)\n        .then(response => {\n          ctx.store.setName(\n            response.data.firstName + \" \" + response.data.lastName\n          );\n          ctx.store.setRole(response.data.role);\n          ctx.store.setId(response.data.id);\n\n          OurToaster.show({\n            message: \"Successfully connected !\",\n            intent: Intent.SUCCESS,\n            timeout: 8000\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n\n  function formIsCorrect(): boolean {\n    if (!mail.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)) {\n      OurToaster.show({\n        message: \"Mail address isn't valid.\",\n        intent: Intent.DANGER\n      });\n      return false;\n    }\n    return true;\n  }\n\n  function validateForm() {\n    return mail.length > 0 && password.length > 0;\n  }\n\n  return (\n    <div>\n      <form onSubmit={loginSubmit}>\n        <div className=\"inputgroup fx -c\">\n          <InputGroup\n            leftIcon=\"user\"\n            placeholder=\"Username\"\n            required={true}\n            value={mail}\n            onChange={(ev: any) => setMail(ev.currentTarget.value)}\n          />\n          <InputGroup\n            placeholder=\"Password\"\n            leftIcon=\"key\"\n            rightElement={lockButton}\n            type={showPassword ? \"text\" : \"password\"}\n            required={true}\n            value={password}\n            onChange={(ev: any) => setPassword(ev.currentTarget.value)}\n          />\n          <Button\n            className=\"outline-style-d\"\n            icon=\"tick-circle\"\n            type=\"submit\"\n            disabled={!validateForm()}\n          >\n            Connection\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n});\n","import React, { FunctionComponent, useState } from \"react\";\nimport { H2, Icon, Tab, Tabs } from \"@blueprintjs/core\";\nimport { Register } from \"./Register\";\nimport { Login } from \"./Login\";\nimport forbesLogo from \"../images/Forbes_logo.svg\";\n\nexport const Welcome: FunctionComponent<{ default_tab: string }> = props => {\n  const [tab, setTab] = useState(props.default_tab);\n\n  return (\n    <div className=\"body\">\n      <div className=\"welcome-all\">\n        <div className=\"fx -r center\">\n          <div className=\"curve-border\">\n            <H2 className=\"title-primary\">Heabank</H2>\n            <p className=\"helvetica p-welcome\">\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem\n              ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n              tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum\n              dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n              tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum\n              dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n              tempor incididunt ut labore et dolore magna aliqua.\n            </p>\n          </div>\n          <div className=\"curve-border\">\n            <Tabs\n              id=\"TabsExample\"\n              className=\"tab-indicator\"\n              selectedTabId={tab}\n            >\n              <Tab\n                id=\"lg\"\n                title=\"Login\"\n                onClickCapture={() => setTab(\"lg\")}\n                panel={<Login />}\n                panelClassName=\"test-panel\"\n                className=\"outline-style-d tab-primary\"\n              />\n              <Tab\n                id=\"rg\"\n                title=\"Register\"\n                onClickCapture={() => setTab(\"rg\")}\n                panel={<Register />}\n                panelClassName=\"ember-panel\"\n                className=\"outline-style-d tab-primary\"\n              />\n              <Tabs.Expander />\n            </Tabs>\n          </div>\n        </div>\n        <div className=\"fx -r center forbes\">\n          <img className=\"bank-logo\" alt=\"forbes\" src={forbesLogo} />\n          <p className=\"times\">” Heabank named best bank in the world ! ”</p>\n        </div>\n        <div className=\"fx -r center footer-welcome\">\n          <Icon icon=\"error\" />\n          <p>Heabank property, all rights reserved.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { ctx } from \"../services/Context\";\nimport { observer } from \"mobx-react\";\nimport { Connected } from \"./Connected\";\nimport { Welcome } from \"./Welcome\";\nimport \"../styles/main.scss\";\n\nexport const Home: FunctionComponent = observer(() => {\n  return (\n    <div className=\"fx -c\">\n      {ctx.store.session.name === \"\" ? (\n        <Welcome default_tab={\"lg\"} />\n      ) : (\n        <Connected />\n      )}\n    </div>\n  );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Home} from \"./components/Home\";\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Forbes_logo.058b45b5.svg\";"],"sourceRoot":""}